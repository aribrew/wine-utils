#!/bin/bash


abort()
{
    MESSAGE=$1

    if ! [ "$MESSAGE" == "" ];
    then
        echo "$MESSAGE"
        echo ""
    fi

    exit 1
}


check_sudo()
{
    if [ "$EUID" == "0" ];
    then
        return 0;
    else
        return 1;
    fi
}


exec_type()
{
    EXEC=$1
    FILE_TYPE=$(file -L "$EXEC")

    echo ${FILE_TYPE} | grep "ELF 32-bit" > /dev/null

    if [ "$?" == "0" ];
    then
        echo "linux-i386"
        echo ""
    else
        echo ${FILE_TYPE} | grep "ELF 64-bit" > /dev/null

        if [ "$?" == "0" ];
        then
            echo "linux-amd64"
            echo ""
        else
            echo ${FILE_TYPE} | grep "PE32 executable" > /dev/null

            if [ "$?" == "0" ];
            then
                echo "windows-i386"
                echo ""
            else
                echo ${FILE_TYPE} | grep "PE32+ executable" > /dev/null

                if [ "$?" == "0" ];
                then
                    echo "windows-amd64"
                    echo ""
                fi
            fi
        fi
    fi
}


filext()
{
    FULL_PATH=$1

    FILE_NAME=$(basename "$FULL_PATH")
    FILE_EXTENSION=${FILE_NAME##*.}

    echo .$FILE_EXTENSION
}


isolabel()
{
    if ! [ -f "/usr/bin/cd-info" ];
    then
        abort "Install libcdio-utils package."
    fi

    ISO="$1"
    ISO=$(realpath "$ISO")
    ISO_FILENAME=$(basename "$ISO")
    FILE_EXT=$(filext "$ISO_FILENAME")

    if [ "$FILE_EXT" == ".bin" ];
    then
        ISO=${ISO/.bin/.cue}

    elif [ "$FILE_EXT" == ".BIN" ];
    then
        ISO=${ISO/.BIN/.CUE}
    fi

    if [[ $ISO == *.cue ]] || [[ $ISO == *.CUE ]];
    then
        cd-info "$ISO" | grep -m1 "Volume" | cut -d ':' -f 2 | xargs

    elif [[ $ISO == *.iso ]] || [[ $ISO == *.ISO ]];
    then
        LABEL=$(iso-info -d -i "$ISO" | grep -m1 "Volume id:" | cut -d ':' -f 2 | xargs)

        if [ "$LABEL" == "" ];
        then
            LABEL=$(iso-info -d -i "$ISO" | grep -m1 "Volume" | cut -d ':' -f 2 | xargs)
        fi

        if [ "$LABEL" == "" ];
        then
            echo "UNNAMED"
        else
            echo "$LABEL"
        fi

    else
        echo "UNKNOWN"
    fi    
}


os_name()
{
    echo "$(cat /etc/os-release | grep ^ID= | cut -d '=' -f 2)"
}


os_version()
{
    echo "$(cat /etc/os-release | grep ^VERSION_CODENAME= | cut -d '=' -f 2)"
}




if ! [ -v ZSH_VERSION ];
then
    export -f abort
    export -f check_sudo
    export -f exec_type
    export -f isolabel
    export -f filext
    export -f os_name
    export -f os_version
fi


if [ "$1" == "install" ];
then
    SCRIPT=$(realpath $0)
    
    if ! [ -d "/opt/bin" ];
    then
        sudo mkdir -p "/opt/bin"
    fi

    sudo cp $SCRIPT /opt/bin/
    sudo chmod 775 /opt/bin/$(basename "$SCRIPT")

    if [ "$?" == "0" ];
    then
        echo "Bash helpers installed to /opt/bin."
        echo ""
    fi
fi
